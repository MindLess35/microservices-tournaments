keycloak:
  auth-server-url: http://localhost:8888
  realm: tournaments
  client-id: admin-cli
  client-secret: nUrAUYb1Q09zF1HmFgYk7FlnVdlMl0LR

  user-client-id: user
  user-client-secret: L5XUWUCutsXlXT0x0qcULSDQuznYqqvW
  grant-type: password


server:
  port: 8020

spring:
  application:
    name: user
  config:
    import: optional:configserver:http://localhost:8000

  datasource:
    url: jdbc:postgresql://localhost:5432/user
    username: nikita
    password: 1234

  jpa:
    open-in-view: false
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        hbm2ddl.auto: validate
        default_schema: users

  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: http://localhost:8888/realms/tournaments

      client:
        registration:
          team:
            client-id: team
#            client-id: ${keycloak.user-client-id}
#            client-secret: ${keycloak.user-client-secret}
            client-secret: Kbv9nt2poEYXtJxu9AftT6ef6a1wmV4Q
            authorization-grant-type: client_credentials
        provider:
          team:
            token-uri: http://localhost:8888/realms/tournaments/protocol/openid-connect/token

  #  security:
#    oauth2:
#      resource-server:
#        jwt:
#          jwk-set-uri: http://keycloak:8080/auth/realms/.../protocol/openid-connect/certs
#      client:
#        registration:
#          account-manager-client:
#            client-id:
#            client-secret:
#            authorization-grant-type: client_credentials
#        provider:
#          account-manager-client:
#            token-uri: http://keycloak:8080/auth/realms/.../protocol/openid-connect/token
#
#spring:
#  cloud:
#    openfeign:
#      client:
#        config:
#          default:
#            default-request-headers:
#              Content-type: application/json
#              Accept: application/json
#              Accept-Charset: UTF-8
#            follow-redirects: false
#            loggerLevel: BASIC
#          account-manager-client:
#            url:

  kafka:
    template:
      default-topic: notifications
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: notificationMessage:com.microservices.user.dto.kafka.NotificationMessage

  liquibase:
    enabled: true
    change-log: liquibase/changelog-master.xml
    default-schema: ${spring.jpa.properties.hibernate.default_schema}

  cloud:
    openfeign:
      client:
        config:
          default:
            loggerLevel: FULL

management:
  tracing:
    sampling:
      probability: 1.0

logging:
  level:
    org:
      hibernate.orm.jdbc.bind: TRACE
      springframework:
        security: TRACE
        jdbc.core: TRACE
        cloud:
          openfeign: TRACE
        kafka: TRACE
    feign: TRACE
    feign.Logger: TRACE
    org.springframework.cloud.openfeign.FeignClient: TRACE
    org.springframework.cloud.openfeign.loadbalancer: TRACE
    org.springframework.security.oauth2: TRACE
    org.springframework.security.oauth2.client: TRACE
    org.springframework.security.oauth2.client.registration: TRACE
    org.springframework.security.oauth2.client.web: TRACE
    org.keycloak: TRACE
    org.apache:
      http: TRACE
      kafka: TRACE




